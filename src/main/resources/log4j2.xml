<?xml version="1.0" encoding="UTF-8"?>
<!--monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数 -项目部署后修改自动读取，不用重启 -->
<configuration monitorInterval="5">
    <!-- 属性 -->
    <Properties>
        <!-- 日期格式化输出：%date表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度 %msg：日志消息，%n是换行符-->
        <!-- %logger{36} 表示 Logger 名字最长36个字符 -->
        <property name="LOG_PATTERN" value="%date{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n" />
        <!-- 路径 -->
        <Property name="FILE_PATH">E:/log</Property>
        <!-- 日志名称 -->
        <Property name="FILE_NAME">eomer</Property>
        <Property name="FILE_NAME_SYS">sys</Property>
        <Property name="FILE_NAME_API">api</Property>

    </Properties>

    <!-- 日志文件属性 -->
    <appenders>
        <!-- 控制台输出 -->
        <console name="Console" target="SYSTEM_OUT">
            <!--输出日志的格式-->
            <PatternLayout pattern="${LOG_PATTERN}"/>
            <!--控制台只输出level及其以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
            <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
        </console>

        <!--文件会打印出所有信息，这个log每次运行程序会自动清空，由append属性决定，适合临时测试用-->
        <File name="Filelog" fileName="${FILE_PATH}/${FILE_NAME}.log" append="false">
            <PatternLayout pattern="${LOG_PATTERN}"/>
        </File>
        <!-- sys -->
        <RollingFile name="sysInfoRollingFile" fileName="${FILE_PATH}/${FILE_NAME_SYS}-info.log" append="true"
                     filePattern="${FILE_PATH}/${FILE_NAME}-WARN-%d{yyyy-MM-dd}_%i.log.gz">
            <!-- 设置Appender日志的上限 -->
            <ThresholdFilter level="error" onMatch="DENY" onMismatch="NEUTRAL"/>
            <!-- 设置Appender日志的底线，最终就能使该文件中只输出info、warn 日志了 -->
            <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="${LOG_PATTERN}"/>
            <Policies>
                <!--interval属性用来指定多久滚动一次，默认是1 hour-->
                <TimeBasedTriggeringPolicy interval="1"/>
                <SizeBasedTriggeringPolicy size="4MB"/>
            </Policies>
            <!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件开始覆盖-->
            <DefaultRolloverStrategy max="15"/>
        </RollingFile>

        <RollingFile name="sysErrorRollingFile" fileName="${FILE_PATH}/${FILE_NAME_SYS}-error.log" append="true"
                     filePattern="${FILE_PATH}/${FILE_NAME}-ERROR-%d{yyyy-MM-dd}_%i.log.gz">
            <ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="${LOG_PATTERN}"/>
            <Policies>
                <!--interval属性用来指定多久滚动一次，默认是1 hour-->
                <TimeBasedTriggeringPolicy interval="1"/>
                <SizeBasedTriggeringPolicy size="4MB"/>
            </Policies>
            <!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件开始覆盖-->
            <DefaultRolloverStrategy max="15"/>
        </RollingFile>

        <!-- api -->
        <RollingFile name="apiInofRollingFile" fileName="${FILE_PATH}/${FILE_NAME_API}-info.log" append="true"
                     filePattern="${FILE_PATH}/${FILE_NAME}-INFO-%d{yyyy-MM-dd}_%i.log.gz">
            <!-- 设置Appender日志的上限 -->
            <ThresholdFilter level="error" onMatch="DENY" onMismatch="NEUTRAL"/>
            <!-- 设置Appender日志的底线，最终就能使该文件中只输出info、warn 日志了 -->
            <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="${LOG_PATTERN}"/>
            <Policies>
                <!--interval属性用来指定多久滚动一次，默认是1 hour-->
                <TimeBasedTriggeringPolicy interval="1"/>
                <SizeBasedTriggeringPolicy size="4MB"/>
            </Policies>
            <!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件开始覆盖-->
            <DefaultRolloverStrategy max="15"/>
        </RollingFile>

        <RollingFile name="apiErrorRollingFile" fileName="${FILE_PATH}/${FILE_NAME_API}-error.log" append="true"
                     filePattern="${FILE_PATH}/${FILE_NAME}-ERROR-%d{yyyy-MM-dd}_%i.log.gz">
            <ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="${LOG_PATTERN}"/>
            <Policies>
                <!--interval属性用来指定多久滚动一次，默认是1 hour-->
                <TimeBasedTriggeringPolicy interval="1"/>
                <SizeBasedTriggeringPolicy size="4MB"/>
            </Policies>
            <!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件开始覆盖-->
            <DefaultRolloverStrategy max="15"/>
        </RollingFile>
    </appenders>
    <!-- 输出项 -->
    <loggers>
        <!-- 默认 -->
        <root level="info" >
            <appender-ref ref="Console"/>
            <appender-ref ref="Filelog"/>
        </root>
        <!--过滤掉spring和mybatis的一些无用的DEBUG信息-->
        <logger name="org.mybatis" level="info" additivity="false">
            <AppenderRef ref="Console"/>
        </logger>
        <!--监控系统信息-->
        <!--若是additivity设为false，则 子Logger 只会在自己的appender里输出，而不会在 父Logger 的appender里输出。-->
        <Logger name="org.springframework" level="info" additivity="false">
            <AppenderRef ref="Console"/>
        </Logger>
        <!-- 模块一 指定文件输出，不在其他显示 -->
        <Logger name="SysLogger" additivity="false" level="all">
            <AppenderRef ref="sysInfoRollingFile" level="info"/>
            <AppenderRef ref="sysErrorRollingFile" level="error"/>
        </Logger>
        <!-- 模块二 指定文件输出，不在其他显示 -->
        <Logger name="ApiLogger" additivity="false" level="all">
            <AppenderRef ref="apiInofRollingFile" level="info"/>
            <AppenderRef ref="apiErrorRollingFile" level="error"/>
        </Logger>
    </loggers>
</configuration>