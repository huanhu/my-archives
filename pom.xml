<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.6.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.eomer</groupId>
    <artifactId>knight</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>knight</name>
    <description>Demo project for Spring Boot</description>
    <!-- 属性 -->
    <properties>
        <java.version>1.8</java.version>
        <vaadin.version>14.0.2</vaadin.version>
        <gson.version>2.8.4</gson.version>
        <druid.version>1.1.9</druid.version>
        <jrobin.version>1.5.9</jrobin.version>
        <druid.version>1.1.20</druid.version>
        <!--<spring-jdbc.version>5.0.9.RELEASE</spring-jdbc.version>-->
        <mysql.jdbc.version>8.0.28</mysql.jdbc.version>
        <oracle.jdbc.version>11.2.0.3</oracle.jdbc.version>
        <sqlite.jdbc.version>3.30.1</sqlite.jdbc.version>
        <swagger-ui.version>2.9.2</swagger-ui.version>
        <swagger2.version>2.9.2</swagger2.version>
        <asciidoctor-maven-plugin.version>1.6.0</asciidoctor-maven-plugin.version>
        <spring.boot.version>2.1.11.RELEASE</spring.boot.version>
        <legacy.version>2.1.0.RELEASE</legacy.version>
        <springframework.core.version>3.2.1.RELEASE</springframework.core.version>
        <boot.starter.log4j2>2.2.2.RELEASE</boot.starter.log4j2>
        <lombok.version>1.18.6</lombok.version>
        <hutool-all.version>5.2.3</hutool-all.version>
        <h2database.version>1.4.200</h2database.version>

        <mybatis-plus.boot.starter.version>3.1.2</mybatis-plus.boot.starter.version>
        <pagehelper-spring.boot.starter.version>1.2.13</pagehelper-spring.boot.starter.version>
        <pagehelper.version>5.1.11</pagehelper.version>
        <pagehelper-spring.boot.starter.version>1.2.13</pagehelper-spring.boot.starter.version>
        <jsqlparser.version>3.1</jsqlparser.version>
    </properties>

    <dependencies>
        <!-- 2.2 开始变动太大 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot</artifactId>
            <version>${spring.boot.version}</version>
        </dependency>
        <!-- spring boot  -->
        <!--对通过REST暴露Spring Data仓库的支持，通过spring-data-rest-webmvc实现-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-rest</artifactId>
        </dependency>
        <!-- spring boot 基础 -->
        <!--对全栈web开发的支持， 包括Tomcat和spring-webmvc-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <!-- 排除jackson依赖 -->
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-databind</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!--导入Spring Boot的默认HTTP引擎-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
        </dependency>
        <!-- 日志 该依赖内容就是Spring Boot默认的日志框架Logback，所以我们在引入log4j2之前，需要先排除该包的依赖，再引入log4j2的依赖。 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
            <exclusions><!-- 去掉springboot默认配置 -->
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- log4j2 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-log4j2</artifactId>
            <version>${boot.starter.log4j2}</version>
        </dependency>
        <!-- 部署tomcat 访问：404 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-legacy</artifactId>
            <version>${legacy.version}</version>
        </dependency>

        <!-- 测试 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- swagger ui  -->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>${swagger2.version}</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>${swagger-ui.version}</version>
        </dependency>
        <!-- 监控核心类，包含在JavaMelody 核心jar包，不用单独添加 -->
        <dependency>
            <groupId>org.jrobin</groupId>
            <artifactId>jrobin</artifactId>
            <version>${jrobin.version}</version>
        </dependency>
        <!--gson -->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>${gson.version}</version>
        </dependency>
        <!-- 连接池 https://mvnrepository.com/artifact/com.alibaba/druid -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid</artifactId>
            <version>${druid.version}</version>
        </dependency>
        <!-- 对JDBC数据库的支持 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
            <!--<version>RELEASE</version>
            <scope>compile</scope>-->
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.xerial/sqlite-jdbc -->
        <!--<dependency>
            <groupId>org.xerial</groupId>
            <artifactId>sqlite-jdbc</artifactId>
            <version>${sqlite.jdbc.version}</version>
        </dependency>-->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
        </dependency>
        <!-- MyBatis 是一款优秀的持久层框架 -->
        <!-- https://mvnrepository.com/artifact/org.mybatis/mybatis -->
        <!--<dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis</artifactId>
            <version>${mybatis.version}</version>
        </dependency>-->
        <!-- https://mvnrepository.com/artifact/com.baomidou/mybatis-plus-boot-starter -->
        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus-boot-starter</artifactId>
            <version>${mybatis-plus.boot.starter.version}</version>
        </dependency>

        <!-- oracle -->
        <!-- https://mvnrepository.com/artifact/oracle/ojdbc6 -->
        <dependency>
            <groupId>oracle</groupId>
            <artifactId>ojdbc6</artifactId>
            <version>${oracle.jdbc.version}</version>
        </dependency>

        <!-- mysql 驱动 -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql.jdbc.version}</version>
        </dependency>
        <!-- 嵌入式数据库 -->
        <!-- https://mvnrepository.com/artifact/com.h2database/h2 -->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>${h2database.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- pagehelper-->
        <!--<dependency>
            <groupId>com.github.pagehelper</groupId>
            <artifactId>pagehelper-spring-boot-starter</artifactId>
            <version>${pagehelper-spring.boot.starter.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.mybatis</groupId>
                    <artifactId>mybatis</artifactId>
                </exclusion>
            </exclusions>
        </dependency>-->
        <!--<dependency>-->
            <!--<groupId>com.github.pagehelper</groupId>-->
            <!--<artifactId>pagehelper</artifactId>-->
            <!--<version>${pagehelper.version}</version>-->
        <!--</dependency>-->
        <!-- pagehelper 依赖 -->
        <!--<dependency>-->
            <!--<groupId>com.github.jsqlparser</groupId>-->
            <!--<artifactId>jsqlparser</artifactId>-->
            <!--<version>${jsqlparser.version}</version>-->
        <!--</dependency>-->

        <!-- 生成代码 - 开始 - 与正常运行冲突正常启用项目时需要注释  -->
        <!-- Mybatis-Plus（简称MP）是一个 Mybatis 的增强工具，在 Mybatis 的基础上只做增强不做改变，为简化开发、提高效率而生。 -->
        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus-generator</artifactId>
            <version>3.0.7.1</version>
        </dependency>
        <!-- Freemarker： -->
        <dependency>
            <groupId>org.freemarker</groupId>
            <artifactId>freemarker</artifactId>
            <version>2.3.29</version>
        </dependency>
        <!-- 依赖 -->
        <!-- Velocity（默认） -->
        <!--<dependency>
            <groupId>org.apache.velocity</groupId>
            <artifactId>velocity-engine-core</artifactId>
            <version>2.2</version>
        </dependency>-->

        <!-- Beetl： -->
        <!--<dependency>
            <groupId>com.ibeetl</groupId>
            <artifactId>beetl</artifactId>
            <version>3.0.18.RELEASE</version>
        </dependency>-->
        <!-- 生成代码 - 结束 -->

        <!-- Java 前端 UI 组件 -->
        <!--<dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-spring-boot-starter</artifactId>
        </dependency>-->

        <!-- 难得糊涂，开源工具类 -->
        <!-- https://mvnrepository.com/artifact/cn.hutool/hutool-all -->
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-all</artifactId>
            <version>${hutool-all.version}</version>
        </dependency>


    </dependencies>

    <dependencyManagement>
        <dependencies>
            <!-- Java 前端 UI 组件 -->
            <!--<dependency>
                <groupId>com.vaadin</groupId>
                <artifactId>vaadin-bom</artifactId>
                <version>${vaadin.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>-->
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <!-- spring-boot插件 -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <!-- AsciiDoc是一种文本文档格式，可以用于书写文档，文章，手册，书籍和UNIX手册。
            AsciiDoc文件可以使用asciidoc命令转换成HTML和DocBook文件格式。
            AsciiDoc结构先进：AsciiDoc语法和输出标签（几乎可以转换成任意的SGML/XML标记）都可以由用户自己定义和扩展。 -->
            <plugin>
                <groupId>org.asciidoctor</groupId>
                <artifactId>asciidoctor-maven-plugin</artifactId>
                <version>${asciidoctor-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>generate-docs</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>process-asciidoc</goal>
                        </goals>
                        <configuration>
                            <backend>html</backend>
                            <doctype>book</doctype>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.springframework.restdocs</groupId>
                        <artifactId>spring-restdocs-asciidoctor</artifactId>
                        <version>${spring-restdocs.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <!--配置打包名称-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <warName>eomer</warName>
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>
